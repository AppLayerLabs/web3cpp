#ifndef TESTS_H
#define TESTS_H

#include <future>
#include <iostream>
#include <string>
#include <vector>

#include <web3cpp/Web3.h>

/**
 * Helper class for unit testing.
 * Each test should be completely contained into a function of its own.
 */

class Tests {
  private:
    // The Web3 object that will be tested
    Web3 web3;
    std::string password;

    // Counters for passed/failed tests, and functions for controlling those
    int pass = 0;
    int fail = 0;
    void passed() {
      std::cout << "PASSED" << std::endl;
      pass++;
    }
    void failed(std::string msg) {
      std::cout << "FAILED - " << msg << std::endl;
      fail++;
    }

  public:
    // Constructor
    // TODO: custom path for test wallet
    Tests(std::string &password) {
      Error error;
      std::cout << "Creating/Loading wallet..." << std::endl;
      if (!web3.wallet.loadWallet(password, error)) {
        throw std::string("Could not load wallet") + error.what();
      }
      this->password = password;
      std::cout << "Wallet created/loaded, starting tests" << std::endl;
    }

    // Show overall test results
    void showResults() {
      std::cout << "----------------------------------------\n"
        << "RESULTS: " << pass << " passed, " << fail << " failed\n"
        << "----------------------------------------\n";
    }

    // TODO: test for valid seedphrase

    /**
     * Test for valid Account generation.
     * Required inputs:
     * - A seedphrase
     * - A derivation path
     * - An example Account generated by said seedphrase for comparison
     * Fails in the following conditions:
     * - TODO: seed is not valid
     * - TODO: derivPath is not valid
     * - TODO: testAcc is not valid
     * - Account is not properly created
     * - Account created doesn't match the example
     */
    void generateAccount(std::string seed, std::string derivPath, std::string testAcc) {
      Error error;
      std::cout << "* Running test: " << __func__ << std::endl
        << "* Seed: " << seed << std::endl
        << "* Derivation path: " << derivPath << std::endl;
      if (!web3.wallet.createNewAccount(derivPath, this->password, error, seed)) {
        failed(std::string("Could not create account") + error.what()); return;
      }
      std::string resultAcc = Utils::toChecksumAddress(
        web3.wallet.getAccounts().get().at(0)
      );
      testAcc = Utils::toChecksumAddress(testAcc);
      if (resultAcc != testAcc) {
        failed("Accounts don't match");
        std::cout << "Expected output: " << testAcc << std::endl;
        std::cout << "Actual output: " << resultAcc << std::endl;
        return;
      }
      passed(); return;
    }
};

#endif // TESTS_H
